name: ci

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versions.outputs.version }}
      git-tag: ${{ steps.versions.outputs.git-tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - name: extract versions
        id: versions
        run: |
          VERSION=$(<VERSION)

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "git-tag=v${VERSION}" >> $GITHUB_OUTPUT

      - name: Check if Tag Exists
        id: check_tag
        run: |
          git ls-remote --exit-code --tags origin '${{ steps.versions.outputs.git-tag }}' && found=true
          if [[ "${found}" == "true" ]]; then
            echo "::error::The ${{ needs.setup.outputs.version }} tag already exists. Please update the version and changelog."
            exit 1
          fi

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        run: make test

  build:
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,enable=true,priority=100,prefix=v${{ needs.test.outputs.version }}-,suffix=,format=short

      - name: print metadata
        run: |
          echo "tags: ${{ steps.meta.outputs.tags }}"
          echo "labels: ${{ steps.meta.outputs.labels }}"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args: VERSION=v${{ needs.test.outputs.version }}

  release-image:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: pull and retag
        if: github.event_name == 'push'
        run: |
          docker pull ${{ needs.build.outputs.image-tag }}
          docker tag  ${{ needs.build.outputs.image-tag }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.test.outputs.version }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.test.outputs.version }}

      - name: GitHub Release
        uses: ncipollo/release-action@v1.15.0
        with:
          tag: v${{ needs.test.outputs.version }}
          draft: ${{ github.event_name != 'push' }}

  release-chart:
    needs: [release-image]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: dist
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"